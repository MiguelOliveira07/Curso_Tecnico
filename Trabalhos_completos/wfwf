# Função para converter um número decimal em binário
def binario():
    # Solicita ao usuário um número decimal
    num = int(input("Digite um número para ser convertido para BINÁRIO: "))

    # Se o número for 0, retorna imediatamente '0'
    if num == 0:
        print('0')
        return '0'

    # Lista para armazenar os restos da divisão por 2
    resultado = []

    # Enquanto o número for maior ou igual a 1, divide por 2 e armazena o resto
    while num >= 1:
        resto = int(num % 2)
        resultado.append(str(resto))
        num = num // 2  # Divisão inteira

    # Reverte a lista para obter o número binário correto
    resultado_bin_revertida = resultado[::-1]

    # Junta os números da lista em uma string e imprime
    bin_str = ''.join(resultado_bin_revertida)
    print(f"O resultado da conversão é : {bin_str}")

    # Retorna a string binária
    return bin_str

# Função para converter um número decimal em octal
def octal():
    # Solicita ao usuário um número decimal
    num_8 = int(input("Digite um número para ser convertido para OCTAL: "))

    # Se o número for 0, retorna imediatamente '0'
    if num_8 == 0:
        print('0')
        return '0'

    # Lista para armazenar os restos da divisão por 8
    resultado_oct = []

    # Enquanto o número for maior ou igual a 1, divide por 8 e armazena o resto
    while num_8 >= 1:
        resto = int(num_8 % 8)
        resultado_oct.append(str(resto))
        num_8 = num_8 // 8  # Divisão inteira

    # Reverte a lista para obter o número octal correto
    resultado_oct_revertida = resultado_oct[::-1]

    # Junta os números da lista em uma string e imprime
    oct_str = ''.join(resultado_oct_revertida)
    print(f"O resultado da conversão é : {oct_str}")

    # Retorna a string octal
    return oct_str

# Função para converter um número decimal em hexadecimal
def hexdec():
    # Solicita ao usuário um número decimal
    num_16 = int(input("Digite um número para ser convertido para HEXADECIMAL: "))

    # Se o número for 0, retorna imediatamente '0'
    if num_16 == 0:
        print("0")
        return "0"

    # Lista para armazenar os restos da divisão por 16
    resultado_hex = []

    # Mapeamento dos valores 10 a 15 para as letras A a F
    hex_map = {10: 'A', 11: 'B', 12: 'C', 13: 'D', 14: 'E', 15: 'F'}

    # Enquanto o número for maior que 0, divide por 16 e armazena o resto
    while num_16 > 0:
        resto = num_16 % 16
        # Se o resto for maior ou igual a 10, converte para a letra correspondente
        if resto >= 10:
            resultado_hex.append(hex_map[resto])
        else:
            resultado_hex.append(str(resto))
        num_16 = num_16 // 16  # Divisão inteira

    # Reverte a lista para obter o número hexadecimal correto
    resultado_hex_revertido = resultado_hex[::-1]

    # Junta os números da lista em uma string e imprime
    hex_str = ''.join(resultado_hex_revertido)
    print(f"O resultado da conversão é : {hex_str}")

    # Retorna a string hexadecimal
    return hex_str

# Função para converter um número binário em decimal
def binario_para_decimal():
    try:
        # Solicita ao usuário um número binário
        binario = input("Digite os valor BINARIO para serem convertidos para DECIMAL: ")
        # Converte o valor binário para decimal
        resultado_convertido = int(binario, 2)
        print(f"O resultado da conversão é : {resultado_convertido}")
    except ValueError:
        # Se a conversão falhar, informa que o valor não é válido
        print("Você não digitou um número válido (base 1 e 0)")

    return resultado_convertido

# Função para converter um número octal em decimal
def octal_para_decimal():
    try:
        # Solicita ao usuário um número octal
        octal = input("Digite o valor OCTAL para ser convertidos para DECIMAL: ")
        # Converte o valor octal para decimal
        resultado_convertido = int(octal, 8)
        print(f"O resultado da conversão é : {resultado_convertido}")
    except ValueError:
        # Se a conversão falhar, informa que o valor não é válido
        print("Você não digitou um número válido")

    return resultado_convertido

# Função para converter um número hexadecimal em decimal
def hex_para_decimal():
    try:
        # Solicita ao usuário um número hexadecimal
        hexadecimal = input("Digite o valor HEXADECIMAL para ser convertidos para DECIMAL: ")
        # Converte o valor hexadecimal para decimal
        resultado_convertido = int(hexadecimal, 16)
        print(f"O resultado da conversão é : {resultado_convertido}")
    except ValueError:
        # Se a conversão falhar, informa que o valor não é válido
        print("Você não digitou um número válido")

    return print(resultado_convertido)

# Loop principal do programa, onde o usuário escolhe a opção de conversão
while True:
    print("="*20, "Transformando", "="*20)

    # Menu de opções para o usuário
    resposta = int(input("[ 0 ] Para finalizar o programa.\n[ 1 ] Decimal para BINÁRIO.\n[ 2 ]Decimal para OCATL\n[ 3 ]Decimal para HEXADECIMAL.\n[ 4 ] BINÁRIO para decimal.\n[ 5 ] OCTAL para decimal.\n[ 6 ] HEXADECIMAL para decimal"))

    print("="*55)

    # Condicional para controlar a execução do programa com base na escolha do usuário
    if resposta == 0:
        print("Fim do programa, volte sempre!")
        break
    elif resposta == 1:
        binario()  # Chama a função de conversão para binário
    elif resposta == 2:
        octal()  # Chama a função de conversão para octal
    elif resposta == 3:
        hexdec()  # Chama a função de conversão para hexadecimal
    elif resposta == 4:
        binario_para_decimal()  # Chama a função de conversão de binário para decimal
    elif resposta == 5:
        octal_para_decimal()  # Chama a função de conversão de octal para decimal
    elif resposta == 6:
        hex_para_decimal()  # Chama a função de conversão de hexadecimal para decimal
    else:
        print('Digite um valor válido.')  # Caso o usuário digite uma opção inválida
